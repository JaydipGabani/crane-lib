name: Releases
on: 
  workflow_dispatch:
    inputs:
      version:
        description: Bump Version
        default: v1.0.0
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Check out source code
        uses: actions/checkout@v2
        with:
          path: main
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Tidy
        env:
          GOPROXY: "https://proxy.golang.org"
        run: cd main && go mod tidy && git diff --quiet HEAD

      - name: Build openshift plugin
        env:
          GOPROXY: "https://proxy.golang.org"
        run: cd main/transform/binary-plugin/examples/openshift/ && GOOS=linux GOARCH=amd64 go build -o ~/main/bin/openshift-${{ github.event.inputs.version }} .
      
      - name: Build skip-owned plugin
        env:
          GOPROXY: "https://proxy.golang.org"
        run: cd main/transform/binary-plugin/examples/skip-owned/ && GOOS=linux GOARCH=amd64 go build -o ~/main/bin/skip-owned-${{ github.event.inputs.version }} .
            
      - name: Build annotation plugin
        env:
          GOPROXY: "https://proxy.golang.org"
        run: cd main/transform/binary-plugin/examples/test/annotation && GOOS=linux GOARCH=amd64 go build -o ~/main/bin/annotation-${{ github.event.inputs.version }} .

      - name: Build whiteout-all plugin
        env:
          GOPROXY: "https://proxy.golang.org"
        run: cd main/transform/binary-plugin/examples/test/whiteout-all && GOOS=linux GOARCH=amd64 go build -o ~/main/bin/whiteout-all-${{ github.event.inputs.version }} .
      
      - name: Build whiteout-pods plugin
        env:
          GOPROXY: "https://proxy.golang.org"
        run: cd main/transform/binary-plugin/examples/test/whiteout-pods && GOOS=linux GOARCH=amd64 go build -o ~/main/bin/whiteout-pods-${{ github.event.inputs.version }} .
      
      - name: release 
        uses: ncipollo/release-action@v1
        with:
          artifacts: "~/main/bin/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version }}
  pull-request:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          token: ${{ secrets.PAT }}
          repository: JaydipGabani/crane-plugins
          
    - name: create files
      run: | 
        cat > change.md
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        commit-message: update changelog
        title: Update Changelog
        body: Update changelog to reflect release changes
        branch: update-changelog
        base: main

#     - name: Create pull request
#       uses: paygoc6/action-pull-request-another-repo@v1.0.5
#       env:
#         API_TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         source_folder: 'go.mod'
#         destination_repo: 'JaydipGabani/crane-plugins'
#         destination_folder: 'OpenshiftPlugin'
#         destination_base_branch: 'main'
#         destination_head_branch: 'test'
#         user_email: 'gabanijaydip@gmail.com'
#         user_name: 'JaydipGabani'

